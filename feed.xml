<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-03-05T01:45:40+05:30</updated><id>/</id><title type="html">Visualisations</title><subtitle></subtitle><entry><title type="html">Fractal Tree</title><link href="/2018/03/03/Fractal-Tree.html" rel="alternate" type="text/html" title="Fractal Tree" /><published>2018-03-03T10:45:40+05:30</published><updated>2018-03-03T10:45:40+05:30</updated><id>/2018/03/03/Fractal-Tree</id><content type="html" xml:base="/2018/03/03/Fractal-Tree.html">&lt;p&gt;A binary fractal tree is defined recursively by symmetric binary branching. The trunk of length L splits into two branches of length r(.7*L), each making an angle q with the direction of the trunk. Both of these branches further divide into two branches. Continuing in this way for infinitely many branchings, the tree is the set of branches, together with their limit (L&amp;gt;4).&lt;/p&gt;

&lt;p&gt;Here I have played with angle(q) which randomly updates with each branching making these trees less symmetric.  This exercise is inspired by ideas presented in this &lt;a href=&quot;https://www.youtube.com/watch?v=0jjeOYMjmDU&amp;amp;t=2s&quot;&gt;Coding Train Video&lt;/a&gt;. Interesting thing here is that all these random variations are generated using a small recursive function.&lt;/p&gt;

&lt;script src=&quot;/Code/p5_libraries/p5.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/Code/p5_libraries/p5.dom.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/Code/FractalTree/sketch.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><summary type="html">A binary fractal tree is defined recursively by symmetric binary branching. The trunk of length L splits into two branches of length r(.7*L), each making an angle q with the direction of the trunk. Both of these branches further divide into two branches. Continuing in this way for infinitely many branchings, the tree is the set of branches, together with their limit (L&amp;gt;4).</summary></entry><entry><title type="html">Double Pendulum</title><link href="/2018/03/01/Double-Pendulum.html" rel="alternate" type="text/html" title="Double Pendulum" /><published>2018-03-01T10:45:40+05:30</published><updated>2018-03-01T10:45:40+05:30</updated><id>/2018/03/01/Double-Pendulum</id><content type="html" xml:base="/2018/03/01/Double-Pendulum.html">&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Double_pendulum&quot;&gt;double pendulum&lt;/a&gt; is a pendulum with another pendulum attached to its end, and is a simple physical system that exhibits rich dynamic behavior with a strong sensitivity to initial conditions. The motion of a double pendulum is governed by a set of coupled ordinary differential equations and is chaotic.&lt;/p&gt;

&lt;p&gt;Here I have added a bit of randomness to initial conditions of mass, gravity &amp;amp; length. This exercise is inspired by ideas presented in this &lt;a href=&quot;https://www.youtube.com/watch?v=uWzPe_S-RVE&amp;amp;t=501s&quot;&gt;Coding Train Video&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;/Code/p5_libraries/p5.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/Code/p5_libraries/p5.dom.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/Code/DoublePendulum/sketch.js&quot;&gt;&lt;/script&gt;</content><author><name></name></author><summary type="html">A double pendulum is a pendulum with another pendulum attached to its end, and is a simple physical system that exhibits rich dynamic behavior with a strong sensitivity to initial conditions. The motion of a double pendulum is governed by a set of coupled ordinary differential equations and is chaotic.</summary></entry></feed>